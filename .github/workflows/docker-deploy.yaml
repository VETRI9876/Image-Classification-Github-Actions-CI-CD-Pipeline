name: Docker Build and Deploy to AWS EC2

on:
  push:
    branches:
      - main  # Trigger pipeline on push to main branch

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    
    steps:
    # Checkout the repository
    - name: Checkout code
      uses: actions/checkout@v2

    # Set up Docker
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    # Log in to Amazon ECR
    - name: Log in to Amazon ECR
      run: |
        aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 047719644852.dkr.ecr.us-east-1.amazonaws.com
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: us-east-1

    # Build Docker image
    - name: Build Docker image
      run: |
        docker build -t myrepo .

    # Tag Docker image
    - name: Tag Docker image
      run: |
        docker tag myrepo:latest 047719644852.dkr.ecr.us-east-1.amazonaws.com/myrepo:latest

    # Push Docker image to AWS ECR
    - name: Push Docker image to AWS ECR
      run: |
        docker push 047719644852.dkr.ecr.us-east-1.amazonaws.com/myrepo:latest

    # SSH into EC2 instance and deploy Docker container
    - name: SSH into EC2 and deploy Docker container
      uses: appleboy/ssh-action@v0.1.5
      with:
        host: 18.206.140.251
        username: ubuntu
        key: ${{ secrets.EC2_PEM_FILE }}
        script: |
          # Authenticate Docker to ECR (use AWS CLI directly here)
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 047719644852.dkr.ecr.us-east-1.amazonaws.com

          # Pull the Docker image from ECR and run it
          docker pull 047719644852.dkr.ecr.us-east-1.amazonaws.com/myrepo:latest
          docker run -d -p 5000:5000 047719644852.dkr.ecr.us-east-1.amazonaws.com/myrepo:latest
