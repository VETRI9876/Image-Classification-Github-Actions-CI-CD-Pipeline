name: CI/CD Pipeline for Docker Deployment

on:
  push:
    branches:
      - main  # Trigger the pipeline on push to the main branch

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Install Docker and AWS CLI prerequisites
      - name: Install Docker and AWS CLI prerequisites
        run: |
          # Update and fix any broken dependencies
          sudo apt-get update
          sudo apt-get install -y apt-transport-https ca-certificates curl software-properties-common
          
          # Add Docker's official GPG key
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg

          # Add Docker's stable repository
          echo "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
          
          # Install Docker
          sudo apt-get update
          sudo apt-get install -y docker-ce docker-ce-cli containerd.io
          
          # Start and enable Docker
          sudo systemctl start docker
          sudo systemctl enable docker
          sudo usermod -aG docker $USER
          
          # Verify Docker installation
          docker --version
          
          # Remove existing AWS CLI if present
          sudo apt-get remove -y awscli
          
          # Install AWS CLI v2
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          sudo apt-get install -y unzip
          unzip awscliv2.zip
          sudo ./aws/install
          
          # Verify AWS CLI installation
          aws --version

      # Step 3: Set up AWS CLI
      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      # Step 4: Log in to Amazon ECR
      - name: Log in to Amazon ECR
        run: |
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 047719644852.dkr.ecr.us-east-1.amazonaws.com

      # Step 5: Build the Docker image
      - name: Build Docker Image
        run: |
          docker build -t myrepo .

      # Step 6: Tag the Docker image
      - name: Tag Docker Image
        run: |
          docker tag myrepo:latest 047719644852.dkr.ecr.us-east-1.amazonaws.com/myrepo:latest

      # Step 7: Push Docker image to AWS ECR
      - name: Push Docker Image to ECR
        run: |
          docker push 047719644852.dkr.ecr.us-east-1.amazonaws.com/myrepo:latest

      # Step 8: Deploy to EC2 instance
      - name: Deploy to Ubuntu EC2
        env:
          EC2_KEY: ${{ secrets.EC2_PEM_FILE }}
        run: |
          # Save the private key to a file
          echo "${{ secrets.EC2_PEM_FILE }}" > EC2_PEM_FILE.pem
          chmod 600 EC2_PEM_FILE.pem

          # SSH into EC2 and deploy the image
          ssh -o StrictHostKeyChecking=no -i EC2_PEM_FILE.pem ubuntu@54.89.249.132 << 'EOF'
            # Log in to ECR on EC2
            aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 047719644852.dkr.ecr.us-east-1.amazonaws.com
            # Pull the Docker image from ECR
            docker pull 047719644852.dkr.ecr.us-east-1.amazonaws.com/myrepo:latest
            # Stop any running container using the same image
            docker ps -q --filter "ancestor=047719644852.dkr.ecr.us-east-1.amazonaws.com/myrepo:latest" | xargs -r docker stop
            # Remove stopped containers (optional cleanup)
            docker ps -aq --filter "ancestor=047719644852.dkr.ecr.us-east-1.amazonaws.com/myrepo:latest" | xargs -r docker rm
            # Run the new container and map port 5000 to port 8080
            docker run -d -p 8080:5000 047719644852.dkr.ecr.us-east-1.amazonaws.com/myrepo:latest
          EOF
