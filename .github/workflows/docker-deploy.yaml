name: Deploy Docker Image to EC2

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    
    # Step 1: Checkout the repository
    - name: Checkout code
      uses: actions/checkout@v2

    # Step 2: Set up AWS credentials
    - name: Set up AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    # Step 3: Build Docker image and push to ECR
    - name: Build and push Docker image to ECR
      run: |
        # Log in to Amazon ECR
        aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 047719644852.dkr.ecr.us-east-1.amazonaws.com
        
        # Build the Docker image
        docker build -t myrepo:latest .

        # Tag the Docker image
        docker tag myrepo:latest 047719644852.dkr.ecr.us-east-1.amazonaws.com/myrepo:latest

        # Push the Docker image to ECR
        docker push 047719644852.dkr.ecr.us-east-1.amazonaws.com/myrepo:latest

    # Step 4: SSH into EC2 and deploy the image
    - name: Deploy to EC2
      run: |
        # Save the private key to a file
        echo "${{ secrets.EC2_PEM_FILE }}" > EC2_PEM_FILE.pem
        chmod 600 EC2_PEM_FILE.pem

        # SSH into EC2 and deploy the image
        ssh -o StrictHostKeyChecking=no -i EC2_PEM_FILE.pem ubuntu@52.91.206.85 << 'EOF'
          # Update the system and install Docker and AWS CLI if not installed
          sudo apt-get update
          sudo apt-get install -y apt-transport-https ca-certificates curl software-properties-common unzip

          # Install Docker
          if ! command -v docker &> /dev/null; then
            echo "Docker not found. Installing Docker..."
            curl -fsSL https://get.docker.com -o get-docker.sh
            sudo sh get-docker.sh
            sudo systemctl start docker
            sudo systemctl enable docker
          else
            echo "Docker is already installed."
          fi

          # Install AWS CLI v2
          if ! command -v aws &> /dev/null; then
            echo "AWS CLI not found. Installing AWS CLI..."
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            unzip awscliv2.zip
            sudo ./aws/install
          else
            echo "AWS CLI is already installed."
          fi

          # Add the 'ubuntu' user to the Docker group to avoid permission issues
          sudo usermod -aG docker ubuntu

          # Log in to ECR on EC2
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 047719644852.dkr.ecr.us-east-1.amazonaws.com

          # Pull the Docker image from ECR
          docker pull 047719644852.dkr.ecr.us-east-1.amazonaws.com/myrepo:latest

          # Stop any running container using the same image
          docker ps -q --filter "ancestor=047719644852.dkr.ecr.us-east-1.amazonaws.com/myrepo:latest" | xargs -r docker stop

          # Remove stopped containers (optional cleanup)
          docker ps -aq --filter "ancestor=047719644852.dkr.ecr.us-east-1.amazonaws.com/myrepo:latest" | xargs -r docker rm

          # Run the new container and map port 5000 to port 8080
          docker run -d -p 8080:5000 047719644852.dkr.ecr.us-east-1.amazonaws.com/myrepo:latest
        EOF
      env:
        AWS_DEFAULT_REGION: us-east-1
        AWS_REGION: us-east-1
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        EC2_KEY: ${{ secrets.EC2_PEM_FILE }}
