name: CI/CD Pipeline for Docker Deployment

on:
  push:
    branches:
      - main  # Trigger the pipeline on push to the main branch

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Install Docker if not installed
      - name: Install Docker if not installed
        run: |
          if ! command -v docker &> /dev/null
          then
            echo "Docker not found, installing..."
            sudo apt update
            sudo apt install -y docker.io
            sudo systemctl start docker
            sudo systemctl enable docker
            sudo usermod -aG docker $USER
            newgrp docker
          else
            echo "Docker is already installed"
          fi
          
      # Step 3: Install AWS CLI if not installed
      - name: Install AWS CLI if not installed
        run: |
          if ! command -v aws &> /dev/null
          then
            echo "AWS CLI not found, installing..."
            sudo apt remove awscli -y
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            sudo apt install unzip -y
            unzip awscliv2.zip
            sudo ./aws/install
          else
            echo "AWS CLI is already installed"
          fi

      # Step 4: Set up AWS CLI
      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      # Step 5: Log in to Amazon ECR
      - name: Log in to Amazon ECR
        run: |
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 047719644852.dkr.ecr.us-east-1.amazonaws.com

      # Step 6: Build the Docker image
      - name: Build Docker Image
        run: |
          docker build -t myrepo .

      # Step 7: Tag the Docker image
      - name: Tag Docker Image
        run: |
          docker tag myrepo:latest 047719644852.dkr.ecr.us-east-1.amazonaws.com/myrepo:latest

      # Step 8: Push Docker image to AWS ECR
      - name: Push Docker Image to ECR
        run: |
          docker push 047719644852.dkr.ecr.us-east-1.amazonaws.com/myrepo:latest

      # Step 9: Deploy to EC2 instance
      - name: Deploy to Ubuntu EC2
        env:
          LIGHTSAIL_KEY: ${{ secrets.EC2_PEM_FILE }}
        run: |
          # Save the private key to a file
          echo "${{ secrets.EC2_PEM_FILE }}" > EC2_PEM_FILE.pem
          chmod 600 EC2_PEM_FILE.pem

          # SSH into EC2 and deploy the image
          ssh -o StrictHostKeyChecking=no -i EC2_PEM_FILE.pem ubuntu@3.80.133.177 << 'EOF'
            # Log in to ECR on EC2
            aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 047719644852.dkr.ecr.us-east-1.amazonaws.com
            # Pull the Docker image from ECR
            docker pull 047719644852.dkr.ecr.us-east-1.amazonaws.com/myrepo:latest
            # Stop any running container using the same image
            docker ps -q --filter "ancestor=047719644852.dkr.ecr.us-east-1.amazonaws.com/myrepo:latest" | xargs -r docker stop
            # Run the new container and map port 5000 to port 8080
            docker run -d -p 8080:5000 047719644852.dkr.ecr.us-east-1.amazonaws.com/myrepo:latest
          EOF
