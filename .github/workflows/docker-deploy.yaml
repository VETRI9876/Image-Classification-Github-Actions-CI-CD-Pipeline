name: CI/CD Pipeline for Docker Deployment

on:
  push:
    branches:
      - main  # Trigger the pipeline on push to the main branch

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Install Docker
      - name: Install Docker
        run: |
          sudo apt-get update -y
          sudo apt-get install -y apt-transport-https ca-certificates curl software-properties-common
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
          sudo apt-get update -y
          sudo apt-get install -y docker-ce docker-ce-cli containerd.io

      # Step 3: Grant Docker Permissions
      - name: Grant Docker Permissions
        run: |
          sudo usermod -aG docker $USER
          newgrp docker

      # Step 4: Install AWS CLI if not installed
      - name: Install AWS CLI
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install --update

      # Step 5: Configure AWS Credentials
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      # Step 6: Log in to Amazon ECR
      - name: Log in to Amazon ECR
        run: |
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 047719644852.dkr.ecr.us-east-1.amazonaws.com

      # Step 7: Verify Docker Login
      - name: Verify Docker Login
        run: docker info

      # Step 8: Build the Docker image
      - name: Build Docker Image
        run: docker build -t myrepo .

      # Step 9: Tag Docker image
      - name: Tag Docker Image
        run: docker tag myrepo:latest 047719644852.dkr.ecr.us-east-1.amazonaws.com/myrepo:latest

      # Step 10: Push Docker image to ECR
      - name: Push Docker Image to ECR
        run: docker push 047719644852.dkr.ecr.us-east-1.amazonaws.com/myrepo:latest

      # Step 11: Deploy the Docker image to the EC2 instance
      - name: Deploy to EC2 Instance
        env:
          EC2_PEM_FILE: ${{ secrets.EC2_PEM_FILE }}  # Assuming the PEM key is stored in GitHub Secrets
        run: |
          # Save the private key to a file
          echo "${{ secrets.EC2_PEM_FILE }}" > EC2_PEM_FILE.pem
          chmod 600 EC2_PEM_FILE.pem

          # SSH into EC2 and deploy the container
          ssh -o StrictHostKeyChecking=no -i EC2_PEM_FILE.pem ubuntu@3.80.133.177 << 'EOF'
            sudo apt-get update -y

            # Install Docker if not already installed
            if ! command -v docker &> /dev/null; then
              echo "Installing Docker..."
              sudo apt-get install -y apt-transport-https ca-certificates curl software-properties-common
              curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
              echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
              sudo apt-get update -y
              sudo apt-get install -y docker-ce docker-ce-cli containerd.io
            fi

            # Log in to ECR
            aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 047719644852.dkr.ecr.us-east-1.amazonaws.com

            # Pull and run the container
            sudo docker pull 047719644852.dkr.ecr.us-east-1.amazonaws.com/myrepo:latest
            sudo docker run -d -p 8080:5000 047719644852.dkr.ecr.us-east-1.amazonaws.com/myrepo:latest
          EOF
